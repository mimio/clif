{"ast":null,"code":"var _jsxFileName = \"/Users/cliftoncampbell/Development/clif.world/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Head from 'next/head';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from 'emotion-theming';\nimport Cursor from 'components/Cursor';\nimport * as analytics from 'utils/analytics';\nimport theme from 'styles/theme';\nimport GlobalStyles from 'styles/GlobalStyles';\nimport store from 'modules/store';\nimport 'normalize.css';\nimport '../fonts/fonts.css';\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nif (global.window) {\n  analytics.init('UA-91745405-6');\n}\n\nconst App = ({\n  Component,\n  pageProps\n}) => ___EmotionJSX(React.Fragment, null, ___EmotionJSX(Head, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }\n}, ___EmotionJSX(\"title\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }\n}, \"hello\"), ___EmotionJSX(\"meta\", {\n  name: \"viewport\",\n  content: \"width=device-width, initial-scale=1\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }\n}), ___EmotionJSX(\"meta\", {\n  name: \"description\",\n  content: \"Clifton Campbell's Web Development Portlfolio\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 7\n  }\n}), ___EmotionJSX(\"meta\", {\n  name: \"keywords\",\n  content: \"Web Development, Mapbox, Software, Clifton Campbell, Websites\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }\n}), ___EmotionJSX(\"meta\", {\n  name: \"author\",\n  content: \"Clifton Campbell\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }\n}), ___EmotionJSX(\"meta\", {\n  charset: \"utf-8\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }\n}), ___EmotionJSX(\"link\", {\n  href: \"https://fonts.googleapis.com/css?family=Roboto+Mono:100,200,300,400&display=swap\",\n  rel: \"stylesheet\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }\n}), ___EmotionJSX(\"link\", {\n  rel: \"icon\",\n  href: \"/favicon.png\",\n  type: \"image/gif\",\n  sizes: \"16x16\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }\n})), ___EmotionJSX(GlobalStyles, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }\n}), ___EmotionJSX(ThemeProvider, {\n  theme: theme,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }\n}, ___EmotionJSX(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }\n}, ___EmotionJSX(Cursor, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }\n}), ___EmotionJSX(Component, _extends({}, pageProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }\n})))));\n\nApp.propTypes = {\n  Component: PropTypes.func.isRequired,\n  pageProps: PropTypes.object.isRequired\n};\nexport default App;","map":{"version":3,"sources":["/Users/cliftoncampbell/Development/clif.world/pages/_app.js"],"names":["React","PropTypes","Head","Provider","ThemeProvider","Cursor","analytics","theme","GlobalStyles","store","global","window","init","App","Component","pageProps","propTypes","func","isRequired","object"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,KAAKC,SAAZ,MAA2B,iBAA3B;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AAEA,OAAO,eAAP;AACA,OAAO,oBAAP;;;AAEA,IAAIC,MAAM,CAACC,MAAX,EAAmB;AACjBL,EAAAA,SAAS,CAACM,IAAV,CAAe,eAAf;AACD;;AAED,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KACV,oCACE,cAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE;AACE,EAAA,IAAI,EAAC,UADP;AAEE,EAAA,OAAO,EAAC,qCAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,EAME;AACE,EAAA,IAAI,EAAC,aADP;AAEE,EAAA,OAAO,EAAC,+CAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EANF,EAUE;AACE,EAAA,IAAI,EAAC,UADP;AAEE,EAAA,OAAO,EAAC,+DAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAVF,EAcE;AAAM,EAAA,IAAI,EAAC,QAAX;AAAoB,EAAA,OAAO,EAAC,kBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAdF,EAeE;AAAM,EAAA,OAAO,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAfF,EAgBE;AACE,EAAA,IAAI,EAAC,kFADP;AAEE,EAAA,GAAG,EAAC,YAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAhBF,EAoBE;AACE,EAAA,GAAG,EAAC,MADN;AAEE,EAAA,IAAI,EAAC,cAFP;AAGE,EAAA,IAAI,EAAC,WAHP;AAIE,EAAA,KAAK,EAAC,OAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EApBF,CADF,EA4BE,cAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA5BF,EA6BE,cAAC,aAAD;AAAe,EAAA,KAAK,EAAER,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,cAAC,QAAD;AAAU,EAAA,KAAK,EAAEE,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,cAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE,cAAC,SAAD,eAAeM,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAFF,CADF,CA7BF,CADF;;AAuCAF,GAAG,CAACG,SAAJ,GAAgB;AACdF,EAAAA,SAAS,EAAEb,SAAS,CAACgB,IAAV,CAAeC,UADZ;AAEdH,EAAAA,SAAS,EAAEd,SAAS,CAACkB,MAAV,CAAiBD;AAFd,CAAhB;AAKA,eAAeL,GAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Head from 'next/head';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from 'emotion-theming';\nimport Cursor from 'components/Cursor';\nimport * as analytics from 'utils/analytics';\nimport theme from 'styles/theme';\nimport GlobalStyles from 'styles/GlobalStyles';\nimport store from 'modules/store';\n\nimport 'normalize.css';\nimport '../fonts/fonts.css';\n\nif (global.window) {\n  analytics.init('UA-91745405-6');\n}\n\nconst App = ({ Component, pageProps }) => (\n  <>\n    <Head>\n      <title>hello</title>\n      <meta\n        name=\"viewport\"\n        content=\"width=device-width, initial-scale=1\"\n      />\n      <meta\n        name=\"description\"\n        content=\"Clifton Campbell's Web Development Portlfolio\"\n      />\n      <meta\n        name=\"keywords\"\n        content=\"Web Development, Mapbox, Software, Clifton Campbell, Websites\"\n      />\n      <meta name=\"author\" content=\"Clifton Campbell\" />\n      <meta charset=\"utf-8\" />\n      <link\n        href=\"https://fonts.googleapis.com/css?family=Roboto+Mono:100,200,300,400&display=swap\"\n        rel=\"stylesheet\"\n      />\n      <link\n        rel=\"icon\"\n        href=\"/favicon.png\"\n        type=\"image/gif\"\n        sizes=\"16x16\"\n      />\n    </Head>\n    <GlobalStyles />\n    <ThemeProvider theme={theme}>\n      <Provider store={store}>\n        <Cursor />\n        <Component {...pageProps} />\n      </Provider>\n    </ThemeProvider>\n  </>\n);\n\nApp.propTypes = {\n  Component: PropTypes.func.isRequired,\n  pageProps: PropTypes.object.isRequired,\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}