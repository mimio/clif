{"ast":null,"code":"import get from 'lodash.get';\nimport uuid from 'uuid/v4';\nimport mapboxGl from 'mapbox-gl-ssr';\nimport sizes from 'styles/theme/sizes';\nimport { WORK_SOURCE } from 'constants/source';\nimport { BOUNDS_PADDING, BOUNDS_PADDING_MOBILE } from 'constants/map';\nimport { selectIsMobile } from '../app/selectors';\nimport { selectLookup, selectGeoJsonBounds } from '../geojson/selectors';\nimport { selectHoveredFeatureId, selectMapLoaded, selectSelectedFeatureId, selectPopupId, selectNextFeatureId, selectPrevFeatureId, selectIsFeatureSelected } from './selectors';\nimport { CLEAR_SELECTION, HOVER_FEATURE, SET_MAP_LOADED, SELECT_FEATURE, UNHOVER_FEATURE, SET_POPUP_ID, RESET_MAP } from './types';\nexport var setMapLoaded = function setMapLoaded(isLoaded) {\n  return {\n    type: SET_MAP_LOADED,\n    payload: isLoaded\n  };\n};\nexport var fitBounds = function fitBounds() {\n  return function (_, getState, getMap) {\n    var state = getState();\n    var map = getMap();\n    var bounds = selectGeoJsonBounds(state);\n    var isMobile = selectIsMobile(state);\n    var isFeatureSelected = selectIsFeatureSelected(state);\n\n    if (bounds) {\n      map.fitBounds(bounds, {\n        padding: isMobile && isFeatureSelected ? BOUNDS_PADDING_MOBILE : BOUNDS_PADDING\n      });\n    }\n  };\n};\nexport var unhoverFeature = function unhoverFeature() {\n  return function (dispatch, getState, getMap) {\n    if (!selectMapLoaded(getState())) return null;\n    var map = getMap();\n    var hoveredId = selectHoveredFeatureId(getState());\n    if (hoveredId) map.setFeatureState({\n      source: WORK_SOURCE,\n      id: hoveredId\n    }, {\n      hover: false\n    });\n    map.getCanvas().style.cursor = 'grab';\n    return dispatch({\n      type: UNHOVER_FEATURE\n    });\n  };\n};\nvar popup;\n\nvar removePopup = function removePopup() {\n  if (popup && popup.isOpen()) {\n    popup.remove();\n  }\n};\n\nexport var clearSelection = function clearSelection() {\n  return function (dispatch, getState, getMap) {\n    if (!selectMapLoaded(getState())) return null;\n    var map = getMap();\n    var selectedId = selectSelectedFeatureId(getState());\n    removePopup();\n    if (selectedId) map.setFeatureState({\n      source: WORK_SOURCE,\n      id: selectedId\n    }, {\n      selected: false\n    });\n    return dispatch({\n      type: CLEAR_SELECTION\n    });\n  };\n};\n\nvar getId = function getId(map, e) {\n  if (typeof e === 'number' || typeof e === 'string') return e;\n\n  try {\n    var features = map.queryRenderedFeatures(e.point);\n    return get(features, '[0].properties.id', null);\n  } catch (err) {\n    console.log(err);\n    return e;\n  }\n};\n\nexport var setPopupId = function setPopupId(id) {\n  return {\n    type: SET_POPUP_ID,\n    payload: id\n  };\n};\nexport var selectFeature = function selectFeature(e) {\n  return function (dispatch, getState, getMap) {\n    var state = getState();\n    if (!selectMapLoaded(state)) return null;\n    var map = getMap();\n    var isMobile = selectIsMobile(state);\n    var prevPopupId = selectPopupId(state);\n    var prevSelectedId = selectSelectedFeatureId(state);\n    var id = getId(map, e);\n    if (!id) return null;\n    var feature = selectLookup(state)[id];\n    map.flyTo({\n      center: feature.coordinates,\n      offset: [0, isMobile ? -60 : 180],\n      zoom: 12\n    });\n\n    if (id !== prevSelectedId) {\n      if (prevSelectedId) {\n        map.setFeatureState({\n          source: WORK_SOURCE,\n          id: prevSelectedId\n        }, {\n          selected: false\n        });\n      }\n\n      map.setFeatureState({\n        source: WORK_SOURCE,\n        id: id\n      }, {\n        selected: true\n      });\n      dispatch({\n        type: SELECT_FEATURE,\n        payload: id\n      });\n    }\n\n    if ((id !== prevSelectedId || !prevPopupId) && !isMobile) {\n      removePopup();\n      var popupId = uuid();\n      popup = new mapboxGl.Popup({\n        closeButton: false,\n        offset: 30,\n        maxWidth: sizes.popupWidth\n      }).once('close', function () {\n        return dispatch(setPopupId(null));\n      }).setLngLat(feature.coordinates).setHTML(\"<div id=\\\"\".concat(popupId, \"\\\"></div>\")).addTo(map);\n      dispatch(setPopupId(popupId));\n    }\n\n    return null;\n  };\n};\nexport var selectNextFeature = function selectNextFeature() {\n  return function (dispatch, getState) {\n    var state = getState();\n    var nextFeatureId = selectNextFeatureId(state);\n    return dispatch(selectFeature(nextFeatureId));\n  };\n};\nexport var selectPrevFeature = function selectPrevFeature() {\n  return function (dispatch, getState) {\n    var state = getState();\n    var prevFeatureId = selectPrevFeatureId(state);\n    return dispatch(selectFeature(prevFeatureId));\n  };\n};\nexport var hoverFeature = function hoverFeature(e) {\n  return function (dispatch, getState, getMap) {\n    var state = getState();\n    if (!selectMapLoaded(state)) return null;\n    var map = getMap();\n    var hoveredId = selectHoveredFeatureId(state);\n    var id = getId(map, e);\n    if (!id) return null;\n    map.getCanvas().style.cursor = 'pointer';\n    if (hoveredId !== id) dispatch(unhoverFeature());\n    if (hoveredId === id) return null;\n    map.setFeatureState({\n      source: WORK_SOURCE,\n      id: id\n    }, {\n      hover: true\n    });\n    return dispatch({\n      type: HOVER_FEATURE,\n      payload: id\n    });\n  };\n};\nexport var resetMap = function resetMap() {\n  return {\n    type: RESET_MAP\n  };\n};","map":{"version":3,"sources":["/Users/cliftoncampbell/Development/clif.world/modules/map/actions.js"],"names":["get","uuid","mapboxGl","sizes","WORK_SOURCE","BOUNDS_PADDING","BOUNDS_PADDING_MOBILE","selectIsMobile","selectLookup","selectGeoJsonBounds","selectHoveredFeatureId","selectMapLoaded","selectSelectedFeatureId","selectPopupId","selectNextFeatureId","selectPrevFeatureId","selectIsFeatureSelected","CLEAR_SELECTION","HOVER_FEATURE","SET_MAP_LOADED","SELECT_FEATURE","UNHOVER_FEATURE","SET_POPUP_ID","RESET_MAP","setMapLoaded","isLoaded","type","payload","fitBounds","_","getState","getMap","state","map","bounds","isMobile","isFeatureSelected","padding","unhoverFeature","dispatch","hoveredId","setFeatureState","source","id","hover","getCanvas","style","cursor","popup","removePopup","isOpen","remove","clearSelection","selectedId","selected","getId","e","features","queryRenderedFeatures","point","err","console","log","setPopupId","selectFeature","prevPopupId","prevSelectedId","feature","flyTo","center","coordinates","offset","zoom","popupId","Popup","closeButton","maxWidth","popupWidth","once","setLngLat","setHTML","addTo","selectNextFeature","nextFeatureId","selectPrevFeature","prevFeatureId","hoverFeature","resetMap"],"mappings":"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","sourcesContent":["import get from 'lodash.get';\nimport uuid from 'uuid/v4';\nimport mapboxGl from 'mapbox-gl-ssr';\nimport sizes from 'styles/theme/sizes';\nimport { WORK_SOURCE } from 'constants/source';\nimport { BOUNDS_PADDING, BOUNDS_PADDING_MOBILE } from 'constants/map';\nimport { selectIsMobile } from '../app/selectors';\nimport {\n  selectLookup,\n  selectGeoJsonBounds,\n} from '../geojson/selectors';\nimport {\n  selectHoveredFeatureId,\n  selectMapLoaded,\n  selectSelectedFeatureId,\n  selectPopupId,\n  selectNextFeatureId,\n  selectPrevFeatureId,\n  selectIsFeatureSelected,\n} from './selectors';\nimport {\n  CLEAR_SELECTION,\n  HOVER_FEATURE,\n  SET_MAP_LOADED,\n  SELECT_FEATURE,\n  UNHOVER_FEATURE,\n  SET_POPUP_ID,\n  RESET_MAP,\n} from './types';\n\nexport const setMapLoaded = (isLoaded) => ({\n  type: SET_MAP_LOADED,\n  payload: isLoaded,\n});\n\nexport const fitBounds = () => (_, getState, getMap) => {\n  const state = getState();\n  const map = getMap();\n  const bounds = selectGeoJsonBounds(state);\n  const isMobile = selectIsMobile(state);\n  const isFeatureSelected = selectIsFeatureSelected(state);\n\n  if (bounds) {\n    map.fitBounds(bounds, {\n      padding:\n        isMobile && isFeatureSelected\n          ? BOUNDS_PADDING_MOBILE\n          : BOUNDS_PADDING,\n    });\n  }\n};\n\nexport const unhoverFeature = () => (dispatch, getState, getMap) => {\n  if (!selectMapLoaded(getState())) return null;\n  const map = getMap();\n  const hoveredId = selectHoveredFeatureId(getState());\n\n  if (hoveredId)\n    map.setFeatureState(\n      { source: WORK_SOURCE, id: hoveredId },\n      { hover: false },\n    );\n\n  map.getCanvas().style.cursor = 'grab';\n  return dispatch({\n    type: UNHOVER_FEATURE,\n  });\n};\n\nlet popup;\nconst removePopup = () => {\n  if (popup && popup.isOpen()) {\n    popup.remove();\n  }\n};\n\nexport const clearSelection = () => (dispatch, getState, getMap) => {\n  if (!selectMapLoaded(getState())) return null;\n  const map = getMap();\n  const selectedId = selectSelectedFeatureId(getState());\n\n  removePopup();\n\n  if (selectedId)\n    map.setFeatureState(\n      { source: WORK_SOURCE, id: selectedId },\n      { selected: false },\n    );\n\n  return dispatch({\n    type: CLEAR_SELECTION,\n  });\n};\n\nconst getId = (map, e) => {\n  if (typeof e === 'number' || typeof e === 'string') return e;\n  try {\n    const features = map.queryRenderedFeatures(e.point);\n    return get(features, '[0].properties.id', null);\n  } catch (err) {\n    console.log(err);\n    return e;\n  }\n};\n\nexport const setPopupId = (id) => ({\n  type: SET_POPUP_ID,\n  payload: id,\n});\n\nexport const selectFeature = (e) => (dispatch, getState, getMap) => {\n  const state = getState();\n  if (!selectMapLoaded(state)) return null;\n  const map = getMap();\n\n  const isMobile = selectIsMobile(state);\n  const prevPopupId = selectPopupId(state);\n  const prevSelectedId = selectSelectedFeatureId(state);\n\n  const id = getId(map, e);\n  if (!id) return null;\n  const feature = selectLookup(state)[id];\n\n  map.flyTo({\n    center: feature.coordinates,\n    offset: [0, isMobile ? -60 : 180],\n    zoom: 12,\n  });\n\n  if (id !== prevSelectedId) {\n    if (prevSelectedId) {\n      map.setFeatureState(\n        { source: WORK_SOURCE, id: prevSelectedId },\n        { selected: false },\n      );\n    }\n    map.setFeatureState(\n      { source: WORK_SOURCE, id },\n      { selected: true },\n    );\n    dispatch({\n      type: SELECT_FEATURE,\n      payload: id,\n    });\n  }\n\n  if ((id !== prevSelectedId || !prevPopupId) && !isMobile) {\n    removePopup();\n    const popupId = uuid();\n    popup = new mapboxGl.Popup({\n      closeButton: false,\n      offset: 30,\n      maxWidth: sizes.popupWidth,\n    })\n      .once('close', () => dispatch(setPopupId(null)))\n      .setLngLat(feature.coordinates)\n      .setHTML(`<div id=\"${popupId}\"></div>`)\n      .addTo(map);\n    dispatch(setPopupId(popupId));\n  }\n  return null;\n};\n\nexport const selectNextFeature = () => (dispatch, getState) => {\n  const state = getState();\n  const nextFeatureId = selectNextFeatureId(state);\n  return dispatch(selectFeature(nextFeatureId));\n};\n\nexport const selectPrevFeature = () => (dispatch, getState) => {\n  const state = getState();\n  const prevFeatureId = selectPrevFeatureId(state);\n  return dispatch(selectFeature(prevFeatureId));\n};\n\nexport const hoverFeature = (e) => (dispatch, getState, getMap) => {\n  const state = getState();\n  if (!selectMapLoaded(state)) return null;\n  const map = getMap();\n  const hoveredId = selectHoveredFeatureId(state);\n\n  const id = getId(map, e);\n\n  if (!id) return null;\n\n  map.getCanvas().style.cursor = 'pointer';\n\n  if (hoveredId !== id) dispatch(unhoverFeature());\n  if (hoveredId === id) return null;\n\n  map.setFeatureState({ source: WORK_SOURCE, id }, { hover: true });\n\n  return dispatch({\n    type: HOVER_FEATURE,\n    payload: id,\n  });\n};\n\nexport const resetMap = () => ({\n  type: RESET_MAP,\n});\n"]},"metadata":{},"sourceType":"module"}