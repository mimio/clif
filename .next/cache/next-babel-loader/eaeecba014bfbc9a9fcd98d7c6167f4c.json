{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _styled from \"@emotion/styled-base\";\nvar _jsxFileName = \"/Users/cliftoncampbell/Development/clif.world/components/GlitchImage/GlitchImage.jsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__() { return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\"; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport glsl from 'glslify';\nimport * as THREE from 'three';\nimport vertex from './glsl/vertex.glsl';\nimport fragment from './glsl/fragment.glsl';\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\nvar vertexShader = glsl(vertex);\nvar fragmentShader = glsl(fragment);\n\nvar Container = _styled(\"div\", {\n  target: \"e1yvo4p60\",\n  label: \"Container\"\n})(false ? {\n  name: \"zzq8fp\",\n  styles: \"position:relative;width:100%;canvas{position:absolute;top:0;left:0;background:transparent;}\"\n} : {\n  name: \"zzq8fp\",\n  styles: \"position:relative;width:100%;canvas{position:absolute;top:0;left:0;background:transparent;}\",\n  map: \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jbGlmdG9uY2FtcGJlbGwvRGV2ZWxvcG1lbnQvY2xpZi53b3JsZC9jb21wb25lbnRzL0dsaXRjaEltYWdlL0dsaXRjaEltYWdlLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFXNEIiLCJmaWxlIjoiL1VzZXJzL2NsaWZ0b25jYW1wYmVsbC9EZXZlbG9wbWVudC9jbGlmLndvcmxkL2NvbXBvbmVudHMvR2xpdGNoSW1hZ2UvR2xpdGNoSW1hZ2UuanN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgZ2xzbCBmcm9tICdnbHNsaWZ5JztcbmltcG9ydCAqIGFzIFRIUkVFIGZyb20gJ3RocmVlJztcbmltcG9ydCB2ZXJ0ZXggZnJvbSAnLi9nbHNsL3ZlcnRleC5nbHNsJztcbmltcG9ydCBmcmFnbWVudCBmcm9tICcuL2dsc2wvZnJhZ21lbnQuZ2xzbCc7XG5cbmNvbnN0IHZlcnRleFNoYWRlciA9IGdsc2wodmVydGV4KTtcbmNvbnN0IGZyYWdtZW50U2hhZGVyID0gZ2xzbChmcmFnbWVudCk7XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGNhbnZhcyB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICB9XG5gO1xuXG5jbGFzcyBHbGl0Y2hJbWFnZSBleHRlbmRzIENvbXBvbmVudCB7XG4gIGNvbnRhaW5lclJlZiA9IG51bGw7XG5cbiAgd2lkdGggPSBudWxsO1xuXG4gIGhlaWdodCA9IG51bGw7XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdGhpcy5zZXRTaXplKCk7XG4gICAgdGhpcy5pbml0KCk7XG4gICAgdGhpcy5jcmVhdGVNZXNoKCk7XG4gICAgdGhpcy5hZGRFdmVudHMoKTtcbiAgICB0aGlzLnJlbmRlclNjZW5lKCk7XG4gICAgdGhpcy5vblJlc2l6ZSgpO1xuICB9XG5cbiAgaW5pdCA9ICgpID0+IHtcbiAgICB0aGlzLnNjZW5lID0gbmV3IFRIUkVFLlNjZW5lKCk7XG4gICAgdGhpcy5jYW1lcmEgPSBuZXcgVEhSRUUuUGVyc3BlY3RpdmVDYW1lcmEoXG4gICAgICA0NSxcbiAgICAgIHRoaXMud2lkdGggLyB0aGlzLmhlaWdodCxcbiAgICAgIDAuMSxcbiAgICAgIDEwMCxcbiAgICApO1xuXG4gICAgdGhpcy5jYW1lcmEucG9zaXRpb24ueiA9IDE7XG4gICAgdGhpcy5yZW5kZXJlciA9IG5ldyBUSFJFRS5XZWJHTFJlbmRlcmVyKHtcbiAgICAgIGFudGlhbGlhczogdHJ1ZSxcbiAgICAgIGFscGhhOiB0cnVlLFxuICAgIH0pO1xuICAgIHRoaXMucmVuZGVyZXIuc2V0U2l6ZSh0aGlzLndpZHRoLCB0aGlzLmhlaWdodCk7XG4gICAgdGhpcy5yZW5kZXJlci5zZXRDbGVhckNvbG9yKDB4MTYxNjE2LCAwKTtcbiAgICB0aGlzLnJlbmRlcmVyLnNldFBpeGVsUmF0aW8od2luZG93LmRldmljZVBpeGVsUmF0aW8pO1xuICAgIHRoaXMuY29udGFpbmVyUmVmLmFwcGVuZENoaWxkKHRoaXMucmVuZGVyZXIuZG9tRWxlbWVudCk7XG5cbiAgICB0aGlzLmNsb2NrID0gbmV3IFRIUkVFLkNsb2NrKCk7XG4gIH07XG5cbiAgc2V0U2l6ZSA9ICgpID0+IHtcbiAgICB0aGlzLndpZHRoID0gdGhpcy5jb250YWluZXJSZWYuY2xpZW50V2lkdGg7XG4gICAgdGhpcy5oZWlnaHQgPSB0aGlzLndpZHRoICogKDUgLyAxMik7XG4gICAgdGhpcy5jb250YWluZXJSZWYuc3R5bGUuaGVpZ2h0ID0gYCR7dGhpcy5oZWlnaHR9cHhgO1xuICB9O1xuXG4gIG9uUmVzaXplID0gKCkgPT4ge1xuICAgIHRoaXMuc2V0U2l6ZSgpO1xuXG4gICAgdGhpcy5jYW1lcmEuYXNwZWN0ID0gdGhpcy53aWR0aCAvIHRoaXMuaGVpZ2h0O1xuICAgIHRoaXMuY2FtZXJhLnVwZGF0ZVByb2plY3Rpb25NYXRyaXgoKTtcblxuICAgIHRoaXMucmVuZGVyZXIuc2V0U2l6ZSh0aGlzLndpZHRoLCB0aGlzLmhlaWdodCk7XG4gICAgdGhpcy5tZXNoLnNjYWxlLnNldChcbiAgICAgIHRoaXMud2lkdGggLyB0aGlzLmhlaWdodCAtICh0aGlzLndpZHRoIC8gdGhpcy5oZWlnaHQpICogMC4yLFxuICAgICAgMC44LFxuICAgICAgMSxcbiAgICApO1xuICB9O1xuXG4gIGFkZEV2ZW50cyA9ICgpID0+IHtcbiAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5ydW4pO1xuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLm9uUmVzaXplLCBmYWxzZSk7XG4gIH07XG5cbiAgY3JlYXRlTWVzaCA9ICgpID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgeyBzcmMgfSA9IHRoaXMucHJvcHM7XG4gICAgICB0aGlzLmdlb21ldHJ5ID0gbmV3IFRIUkVFLlBsYW5lR2VvbWV0cnkoMSwgMSwgMTYsIDE2KTtcbiAgICAgIGNvbnN0IHRleHR1cmUgPSBuZXcgVEhSRUUuVGV4dHVyZUxvYWRlcigpLmxvYWQoc3JjKTtcbiAgICAgIHRleHR1cmUubWluRmlsdGVyID0gVEhSRUUuTGluZWFyRmlsdGVyO1xuICAgICAgdGhpcy5tYXRlcmlhbCA9IG5ldyBUSFJFRS5TaGFkZXJNYXRlcmlhbCh7XG4gICAgICAgIHZlcnRleFNoYWRlcixcbiAgICAgICAgZnJhZ21lbnRTaGFkZXIsXG4gICAgICAgIHVuaWZvcm1zOiB7XG4gICAgICAgICAgdVRpbWU6IHsgdmFsdWU6IDAuMCB9LFxuICAgICAgICAgIHVUZXh0dXJlOiB7XG4gICAgICAgICAgICB2YWx1ZTogdGV4dHVyZSxcbiAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgfSk7XG4gICAgICB0aGlzLm1lc2ggPSBuZXcgVEhSRUUuTWVzaCh0aGlzLmdlb21ldHJ5LCB0aGlzLm1hdGVyaWFsKTtcblxuICAgICAgdGhpcy5zY2VuZS5hZGQodGhpcy5tZXNoKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBhbGVydChlKTtcbiAgICB9XG4gIH07XG5cbiAgcnVuID0gKCkgPT4ge1xuICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLnJ1bik7XG4gICAgdGhpcy5yZW5kZXJTY2VuZSgpO1xuICB9O1xuXG4gIHJlbmRlclNjZW5lID0gKCkgPT4ge1xuICAgIHRoaXMubWF0ZXJpYWwudW5pZm9ybXMudVRpbWUudmFsdWUgPSB0aGlzLmNsb2NrLmdldEVsYXBzZWRUaW1lKCk7XG4gICAgdGhpcy5yZW5kZXJlci5yZW5kZXIodGhpcy5zY2VuZSwgdGhpcy5jYW1lcmEpO1xuICB9O1xuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IGdhIH0gPSB0aGlzLnByb3BzO1xuICAgIHJldHVybiAoXG4gICAgICA8Q29udGFpbmVyXG4gICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgZ3JpZEFyZWE6IGdhLFxuICAgICAgICB9fVxuICAgICAgICByZWY9eyhyZWYpID0+IHtcbiAgICAgICAgICB0aGlzLmNvbnRhaW5lclJlZiA9IHJlZjtcbiAgICAgICAgfX1cbiAgICAgIC8+XG4gICAgKTtcbiAgfVxufVxuXG5HbGl0Y2hJbWFnZS5wcm9wVHlwZXMgPSB7XG4gIHNyYzogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBnYTogUHJvcFR5cGVzLnN0cmluZyxcbn07XG5cbkdsaXRjaEltYWdlLmRlZmF1bHRQcm9wcyA9IHtcbiAgZ2E6ICcnLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgR2xpdGNoSW1hZ2U7XG4iXX0= */\",\n  toString: _EMOTION_STRINGIFIED_CSS_ERROR__\n});\n\nvar GlitchImage = /*#__PURE__*/function (_Component) {\n  _inherits(GlitchImage, _Component);\n\n  var _super = _createSuper(GlitchImage);\n\n  function GlitchImage() {\n    var _this;\n\n    _classCallCheck(this, GlitchImage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"containerRef\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"width\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"height\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"init\", function () {\n      _this.scene = new THREE.Scene();\n      _this.camera = new THREE.PerspectiveCamera(45, _this.width / _this.height, 0.1, 100);\n      _this.camera.position.z = 1;\n      _this.renderer = new THREE.WebGLRenderer({\n        antialias: true,\n        alpha: true\n      });\n\n      _this.renderer.setSize(_this.width, _this.height);\n\n      _this.renderer.setClearColor(0x161616, 0);\n\n      _this.renderer.setPixelRatio(window.devicePixelRatio);\n\n      _this.containerRef.appendChild(_this.renderer.domElement);\n\n      _this.clock = new THREE.Clock();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setSize\", function () {\n      _this.width = _this.containerRef.clientWidth;\n      _this.height = _this.width * (5 / 12);\n      _this.containerRef.style.height = \"\".concat(_this.height, \"px\");\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onResize\", function () {\n      _this.setSize();\n\n      _this.camera.aspect = _this.width / _this.height;\n\n      _this.camera.updateProjectionMatrix();\n\n      _this.renderer.setSize(_this.width, _this.height);\n\n      _this.mesh.scale.set(_this.width / _this.height - _this.width / _this.height * 0.2, 0.8, 1);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addEvents\", function () {\n      requestAnimationFrame(_this.run);\n      window.addEventListener('resize', _this.onResize, false);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createMesh\", function () {\n      try {\n        var src = _this.props.src;\n        _this.geometry = new THREE.PlaneGeometry(1, 1, 16, 16);\n        var texture = new THREE.TextureLoader().load(src);\n        texture.minFilter = THREE.LinearFilter;\n        _this.material = new THREE.ShaderMaterial({\n          vertexShader: vertexShader,\n          fragmentShader: fragmentShader,\n          uniforms: {\n            uTime: {\n              value: 0.0\n            },\n            uTexture: {\n              value: texture\n            }\n          }\n        });\n        _this.mesh = new THREE.Mesh(_this.geometry, _this.material);\n\n        _this.scene.add(_this.mesh);\n      } catch (e) {\n        alert(e);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"run\", function () {\n      requestAnimationFrame(_this.run);\n\n      _this.renderScene();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderScene\", function () {\n      _this.material.uniforms.uTime.value = _this.clock.getElapsedTime();\n\n      _this.renderer.render(_this.scene, _this.camera);\n    });\n\n    return _this;\n  }\n\n  _createClass(GlitchImage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setSize();\n      this.init();\n      this.createMesh();\n      this.addEvents();\n      this.renderScene();\n      this.onResize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var ga = this.props.ga;\n      return ___EmotionJSX(Container, {\n        style: {\n          gridArea: ga\n        },\n        ref: function ref(_ref) {\n          _this2.containerRef = _ref;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return GlitchImage;\n}(Component);\n\nGlitchImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  ga: PropTypes.string\n};\nGlitchImage.defaultProps = {\n  ga: ''\n};\nexport default GlitchImage;","map":{"version":3,"sources":["/Users/cliftoncampbell/Development/clif.world/components/GlitchImage/GlitchImage.jsx"],"names":["React","Component","PropTypes","glsl","THREE","vertex","fragment","vertexShader","fragmentShader","Container","GlitchImage","scene","Scene","camera","PerspectiveCamera","width","height","position","z","renderer","WebGLRenderer","antialias","alpha","setSize","setClearColor","setPixelRatio","window","devicePixelRatio","containerRef","appendChild","domElement","clock","Clock","clientWidth","style","aspect","updateProjectionMatrix","mesh","scale","set","requestAnimationFrame","run","addEventListener","onResize","src","props","geometry","PlaneGeometry","texture","TextureLoader","load","minFilter","LinearFilter","material","ShaderMaterial","uniforms","uTime","value","uTexture","Mesh","add","e","alert","renderScene","getElapsedTime","render","init","createMesh","addEvents","ga","gridArea","ref","propTypes","string","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport glsl from 'glslify';\nimport * as THREE from 'three';\nimport vertex from './glsl/vertex.glsl';\nimport fragment from './glsl/fragment.glsl';\n\nconst vertexShader = glsl(vertex);\nconst fragmentShader = glsl(fragment);\n\nconst Container = styled.div`\n  position: relative;\n  width: 100%;\n  canvas {\n    position: absolute;\n    top: 0;\n    left: 0;\n    background: transparent;\n  }\n`;\n\nclass GlitchImage extends Component {\n  containerRef = null;\n\n  width = null;\n\n  height = null;\n\n  componentDidMount() {\n    this.setSize();\n    this.init();\n    this.createMesh();\n    this.addEvents();\n    this.renderScene();\n    this.onResize();\n  }\n\n  init = () => {\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(\n      45,\n      this.width / this.height,\n      0.1,\n      100,\n    );\n\n    this.camera.position.z = 1;\n    this.renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: true,\n    });\n    this.renderer.setSize(this.width, this.height);\n    this.renderer.setClearColor(0x161616, 0);\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.containerRef.appendChild(this.renderer.domElement);\n\n    this.clock = new THREE.Clock();\n  };\n\n  setSize = () => {\n    this.width = this.containerRef.clientWidth;\n    this.height = this.width * (5 / 12);\n    this.containerRef.style.height = `${this.height}px`;\n  };\n\n  onResize = () => {\n    this.setSize();\n\n    this.camera.aspect = this.width / this.height;\n    this.camera.updateProjectionMatrix();\n\n    this.renderer.setSize(this.width, this.height);\n    this.mesh.scale.set(\n      this.width / this.height - (this.width / this.height) * 0.2,\n      0.8,\n      1,\n    );\n  };\n\n  addEvents = () => {\n    requestAnimationFrame(this.run);\n    window.addEventListener('resize', this.onResize, false);\n  };\n\n  createMesh = () => {\n    try {\n      const { src } = this.props;\n      this.geometry = new THREE.PlaneGeometry(1, 1, 16, 16);\n      const texture = new THREE.TextureLoader().load(src);\n      texture.minFilter = THREE.LinearFilter;\n      this.material = new THREE.ShaderMaterial({\n        vertexShader,\n        fragmentShader,\n        uniforms: {\n          uTime: { value: 0.0 },\n          uTexture: {\n            value: texture,\n          },\n        },\n      });\n      this.mesh = new THREE.Mesh(this.geometry, this.material);\n\n      this.scene.add(this.mesh);\n    } catch (e) {\n      alert(e);\n    }\n  };\n\n  run = () => {\n    requestAnimationFrame(this.run);\n    this.renderScene();\n  };\n\n  renderScene = () => {\n    this.material.uniforms.uTime.value = this.clock.getElapsedTime();\n    this.renderer.render(this.scene, this.camera);\n  };\n\n  render() {\n    const { ga } = this.props;\n    return (\n      <Container\n        style={{\n          gridArea: ga,\n        }}\n        ref={(ref) => {\n          this.containerRef = ref;\n        }}\n      />\n    );\n  }\n}\n\nGlitchImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  ga: PropTypes.string,\n};\n\nGlitchImage.defaultProps = {\n  ga: '',\n};\n\nexport default GlitchImage;\n"]},"metadata":{},"sourceType":"module"}