{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SET_SCREEN_SIZE } from './actions';\nvar initialState = {\n  screenSize: null\n};\nexport function appReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n      payload = action.payload;\n\n  switch (type) {\n    case SET_SCREEN_SIZE:\n      return _objectSpread({}, state, {\n        screenSize: payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/cliftoncampbell/Development/clif.world/modules/app/reducer.js"],"names":["SET_SCREEN_SIZE","initialState","screenSize","appReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,WAAhC;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE;AADO,CAArB;AAIA,OAAO,SAASC,UAAT,GAAkD;AAAA,MAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,MAARI,MAAQ;AAAA,MAC/CC,IAD+C,GAC7BD,MAD6B,CAC/CC,IAD+C;AAAA,MACzCC,OADyC,GAC7BF,MAD6B,CACzCE,OADyC;;AAEvD,UAAQD,IAAR;AACE,SAAKN,eAAL;AACE,+BACKI,KADL;AAEEF,QAAAA,UAAU,EAAEK;AAFd;;AAIF;AACE,aAAOH,KAAP;AAPJ;AASD","sourcesContent":["import { SET_SCREEN_SIZE } from './actions';\n\nconst initialState = {\n  screenSize: null,\n};\n\nexport function appReducer(state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_SCREEN_SIZE:\n      return {\n        ...state,\n        screenSize: payload,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}