{"ast":null,"code":"import thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { getMap } from 'utils/map';\nimport appReducer from './appReducer';\n\nvar rootReducer = function rootReducer(state, action) {\n  return appReducer(state, action);\n};\n\nfunction configureStore() {\n  var middlewares = [thunk.withExtraArgument(getMap)];\n  var composeFn = compose;\n\n  if (__DEV__) {\n    composeFn = composeWithDevTools;\n  }\n\n  var store = createStore(rootReducer, composeFn(applyMiddleware.apply(void 0, middlewares)));\n  return store;\n}\n\nexport default configureStore();","map":{"version":3,"sources":["/Users/cliftoncampbell/Development/clif.world/modules/store.js"],"names":["thunk","composeWithDevTools","createStore","applyMiddleware","compose","getMap","appReducer","rootReducer","state","action","configureStore","middlewares","withExtraArgument","composeFn","__DEV__","store"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0CAApC;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,MAAT,QAAuB,WAAvB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,MAAR;AAAA,SAAmBH,UAAU,CAACE,KAAD,EAAQC,MAAR,CAA7B;AAAA,CAApB;;AAEA,SAASC,cAAT,GAA0B;AACxB,MAAMC,WAAW,GAAG,CAACX,KAAK,CAACY,iBAAN,CAAwBP,MAAxB,CAAD,CAApB;AAEA,MAAIQ,SAAS,GAAGT,OAAhB;;AAEA,MAAIU,OAAJ,EAAa;AACXD,IAAAA,SAAS,GAAGZ,mBAAZ;AACD;;AAED,MAAMc,KAAK,GAAGb,WAAW,CACvBK,WADuB,EAEvBM,SAAS,CAACV,eAAe,MAAf,SAAmBQ,WAAnB,CAAD,CAFc,CAAzB;AAKA,SAAOI,KAAP;AACD;;AAED,eAAeL,cAAc,EAA7B","sourcesContent":["import thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { getMap } from 'utils/map';\n\nimport appReducer from './appReducer';\n\nconst rootReducer = (state, action) => appReducer(state, action);\n\nfunction configureStore() {\n  const middlewares = [thunk.withExtraArgument(getMap)];\n\n  let composeFn = compose;\n\n  if (__DEV__) {\n    composeFn = composeWithDevTools;\n  }\n\n  const store = createStore(\n    rootReducer,\n    composeFn(applyMiddleware(...middlewares)),\n  );\n\n  return store;\n}\n\nexport default configureStore();\n"]},"metadata":{},"sourceType":"module"}